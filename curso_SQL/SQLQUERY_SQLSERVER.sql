/* criando banco de dados*/

create database aula_sql

use aula_sql

create table teste(
	nome varchar(30)
)

create database BANCO01

use BANCO01

create table teste(
	nome varchar(30)
)

create database BANCO02
GO

use BANCO02
GO

create table teste(
	nome varchar(30)
)
GO

SP_COLUMNS TESTE
GO

SELECT * FROM teste

DROP DATABASE aula_sql
GO

DROP DATABASE BANCO01
GO

DROP DATABASE BANCO02
GO


CREATE DATABASE ESCOLA
GO

USE ESCOLA

CREATE TABLE ALUNOS(
		IDALUNO INT PRIMARY KEY IDENTITY,
		NOME VARCHAR(50) NOT  NULL,
		SEXO CHAR(1),
		NASCIMENTO DATE NOT NULL,
		EMAIL VARCHAR(50) UNIQUE
)
GO

/* 
CRIANDO CONSTRAINTS ALTERANDO O ATRIBUTO SEXO
RESTRIÇÃO CHECK POR FORA DA TABELA
*/
ALTER TABLE ALUNOS
ADD CONSTRAINT CK_SEXO CHECK (SEXO IN ('M', 'F'))
GO

/* RELACIONAMENTO 1X1*/

CREATE TABLE ENDERECO(
		IDENDERECO INT PRIMARY KEY IDENTITY,
		BAIRRO VARCHAR(30) NOT NULL,
		UF CHAR(2) NOT NULL CHECK (UF IN('RJ', 'SP', 'MG' )),
		ID_ALUNO INT UNIQUE

)
GO

/*CRIANDO A FK */

ALTER TABLE ENDERECO
ADD CONSTRAINT FK_ENDERECO_ALUNO
FOREIGN KEY(ID_ALUNO) REFERENCES ALUNOS(IDALUNO)
GO


/* COMANDO DE DESC */

/* PROCEDURES JÁ CRIADAS E ARMAZENADAS NO SISTEMA*/

SP_COLUMNS ALUNOS
GO

SP_HELP ALUNOS
GO

/*INSERINDO DADOS */

INSERT INTO ALUNOS VALUES('JOAO', 'M', '1989/07/09', 'JOAO@GMAIL.COM')
INSERT INTO ALUNOS VALUES('MARIA', 'F', '1990/05/03', 'MARIA@GMAIL.COM')
INSERT INTO ALUNOS VALUES('JOSE', 'M', '1970/10/01', 'JOSE@GMAIL.COM')
INSERT INTO ALUNOS VALUES('CARLA', 'F', '1990/08/11', 'CARLA@GMAIL.COM')
INSERT INTO ALUNOS VALUES('LILIAM', 'F', '1988/02/05', 'LILIAN@GMAIL.COM')
INSERT INTO ALUNOS VALUES('CARLOS', 'M', '1965/09/15', 'CARLOS@GMAIL.COM')
GO

SELECT * FROM ALUNOS 
GO

INSERT INTO ENDERECO VALUES('FLAMENGO', 'RJ', 1)
INSERT INTO ENDERECO VALUES('MORUMBI', 'SP', 2)
INSERT INTO ENDERECO VALUES('CENTRO', 'RJ', 4)
INSERT INTO ENDERECO VALUES('CENTRO', 'MG', 6)
GO

SELECT * FROM ENDERECO 
GO

/* CRIANDO TABELA TELEFONE 1 X N */
CREATE TABLE TELEFONE(
		IDTELEFONE INT PRIMARY KEY IDENTITY,
		TIPO CHAR(3) NOT NULL,
		NUMERO VARCHAR(10) NOT NULL,
		ID_ALUNO INT,
		CHECK (TIPO IN('RES', 'COM', 'CEL'))
)
GO

INSERT INTO TELEFONE VALUES ('CEL', '987654321', 1)
INSERT INTO TELEFONE VALUES ('RES', '36063636', 1)
INSERT INTO TELEFONE VALUES ('COM', '35354847', 2)
INSERT INTO TELEFONE VALUES ('CEL', '897456321', 2)

SELECT * FROM TELEFONE 
GO

/* PEGAR DATA ATUAL DO SISTEMA */

SELECT GETDATE()
GO



/* CLAUSULA AMBIGUA */

/* SEMPRE USAR O ON COM O JOIN */

SELECT A.NOME, T.TIPO, T.NUMERO, E.BAIRRO, E.UF
FROM ALUNOS A
INNER JOIN TELEFONE T
ON A.IDALUNO = T.ID_ALUNO
INNER JOIN ENDERECO E
ON A.IDALUNO = T.ID_ALUNO
GO



SELECT A.NOME, T.TIPO, T.NUMERO, E.BAIRRO, E.UF
FROM ALUNOS A
LEFT JOIN TELEFONE T
ON A.IDALUNO = T.ID_ALUNO
INNER JOIN ENDERECO E
ON A.IDALUNO = T.ID_ALUNO
GO


SELECT	A.NOME, 
		ISNULL (T.TIPO, 'SEM' ) AS TIPO,
		ISNULL (T.NUMERO,'NUMERO') AS TELEFONE ,
		E.BAIRRO, 
		E.UF
FROM ALUNOS A
INNER JOIN TELEFONE T
ON A.IDALUNO = T.ID_ALUNO
INNER JOIN ENDERECO E
ON A.IDALUNO = T.ID_ALUNO
GO

SELECT NOME, NASCIMENTO
FROM ALUNOS 
GO

/*FUNÇÃO GETDATE(0 TRAZ O DIA E HORA
DATADIFF PEDE 3 PARAMETROS E CALCULA A DIFERENÇA ENTRE DATAS E RETORNA UM INTEIRO
DATENAME TRAZ O NOME DA PARTE DA DATA EM QUESTÃO
DATEPART RETORNA UM INTEIRO
DATEADD RETORNA UMA DATA SOMANDO A OUTRA

*/

SELECT NOME, GETDATE() AS DIA_HORA
FROM ALUNOS

SELECT NOME, DATEDIFF(DAY, NASCIMENTO, GETDATE()) AS IDADE
FROM ALUNOS
GO

SELECT NOME, DATEDIFF(DAY, NASCIMENTO, GETDATE()/365) AS IDADE
FROM ALUNOS
GO

SELECT NOME, (DATEDIFF(MONTH, NASCIMENTO, GETDATE())/12) AS IDADE
FROM ALUNOS
GO

SELECT NOME, DATEDIFF(YEAR, NASCIMENTO, GETDATE()) AS IDADE
FROM ALUNOS
GO


SELECT NOME, DATENAME(YEAR, NASCIMENTO) AS IDADE
FROM ALUNOS
GO

SELECT NOME, DATENAME(MONTH, NASCIMENTO) AS IDADE
FROM ALUNOS
GO

SELECT NOME, DATENAME(WEEKDAY, NASCIMENTO) AS IDADE
FROM ALUNOS
GO


SELECT NOME, DATEPART(MONTH, NASCIMENTO)AS DIA , DATENAME(MONTH, NASCIMENTO) AS MES
FROM ALUNOS
GO

SELECT DATEADD(DAY,365,GETDATE())

SELECT DATEADD(YEAR,10,GETDATE())

